services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_HOME: ${APP_HOME}
        PYTHON_ENV: ${PYTHON_ENV}
    ports:
      - "${APP_PORT:-8000}:8000"
    volumes:
      - .:${APP_HOME}
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - CELERY_BROKER_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - postgres
      - neo4j
      - redis
  
  celery_worker:
    build:
      context: .
      args:
        - APP_HOME=${APP_HOME}
        - PYTHON_ENV=${PYTHON_ENV}
    command: celery -A app.services.celery_app worker --loglevel=info
    volumes:
      - .:${APP_HOME}
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - CELERY_BROKER_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - app
      - redis

  postgres:
    # image: postgres:16.3-bookworm
    image: postgres:16.3-alpine3.20
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  neo4j:
    image: neo4j:5.21.2-community-bullseye
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    volumes:
      - neo4j_data:/data
  
  redis:
    # image: redis:7.2.5-bookworm
    image: redis:7.2.5-alpine3.20
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  neo4j_data:
  uploads:
